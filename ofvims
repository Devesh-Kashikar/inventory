<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Inventory Management</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            background: #f0f2f5;
        }

        h1 {
            text-align: center;
        }

        form {
            max-width: 400px;
            margin: auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px #ccc;
        }

        input[type=text],
        input[type=number] {
            width: 100%;
            padding: 8px;
            margin: 8px 0;
            box-sizing: border-box;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

        button {
            background-color: #4caf50;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 4px;
            font-size: 16px;
        }

        button:hover {
            background-color: #45a049;
        }

        table {
            width: 100%;
            max-width: 700px;
            margin: 20px auto;
            border-collapse: collapse;
        }

        th,
        td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: center;
        }

        th {
            background-color: #4caf50;
            color: white;
        }

        #exportBtn {
            background-color: #2196F3;
            margin: 20px auto;
            display: block;
        }

        #exportBtn:hover {
            background-color: #0b7dda;
        }
    </style>
</head>

<body>

    <h1>Inventory Management System</h1>

    <form id="inventoryForm">
        <label for="itemName">Item Name:</label>
        <input type="text" id="itemName" required placeholder="Enter item name" />

        <label for="quantity">Quantity:</label>
        <input type="number" id="quantity" required min="1" placeholder="Enter quantity" />

        <button type="submit">Add Item</button>
    </form>

    <table id="inventoryTable">
        <thead>
            <tr>
                <th>Item Name</th>
                <th>Quantity</th>
                <th>Date & Time Added</th>
            </tr>
        </thead>
        <tbody>
            <!-- inventory rows will go here -->
        </tbody>
    </table>

    <button id="exportBtn">Export to Google Sheet</button>

    <script>
        const form = document.getElementById('inventoryForm');
        const tableBody = document.querySelector('#inventoryTable tbody');
        const exportBtn = document.getElementById('exportBtn');

        // Load inventory from localStorage or empty array
        let inventory = JSON.parse(localStorage.getItem('inventoryData')) || [];

        function renderTable() {
            tableBody.innerHTML = '';
            inventory.forEach((item, index) => {
                const row = document.createElement('tr');
                row.innerHTML = `
        <td>${item.name}</td>
        <td>${item.quantity}</td>
        <td>${item.date}</td>
      `;
                tableBody.appendChild(row);
            });
        }

        form.addEventListener('submit', e => {
            e.preventDefault();
            const name = document.getElementById('itemName').value.trim();
            const quantity = document.getElementById('quantity').value;

            if (!name || quantity <= 0) {
                alert('Please enter valid name and quantity.');
                return;
            }

            const now = new Date();
            const dateTime = now.toLocaleString();

            // Add new item
            inventory.push({
                name,
                quantity: Number(quantity),
                date: dateTime
            });

            // Save to localStorage
            localStorage.setItem('inventoryData', JSON.stringify(inventory));

            // Update table
            renderTable();

            // Clear form
            form.reset();
        });

        // Initial render
        renderTable();

        // Export to Google Sheets logic
        exportBtn.addEventListener('click', () => {
            if (inventory.length === 0) {
                alert('No data to export!');
                return;
            }

            // POST inventory data to Google Apps Script endpoint
            fetch('https://script.google.com/macros/s/AKfycbzjQwc_oXk_ISHx0-TPqMzXbliM1zMX7oZnou0F0-HUV75glzT_pOxPHXty3EbTCwbi/exec', {
                    method: 'POST',
                    body: JSON.stringify(inventory),
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(res => res.text())
                .then(response => {
                    alert('Data exported to Google Sheet successfully!');
                })
                .catch(err => {
                    alert('Error exporting data: ' + err.message);
                });
        });
    </script>

</body>

</html>










<------------------------------------------------------------------------------------------>

App script code

function doPost(e) {
  try {
    var sheet = SpreadsheetApp.getActiveSpreadsheet().getSheetByName('Sheet1');
    if (!sheet) {
      sheet = SpreadsheetApp.getActiveSpreadsheet().insertSheet('Sheet1');
    }

    var data = JSON.parse(e.postData.contents);

    if (sheet.getLastRow() === 0) {
      sheet.appendRow(['Item Name', 'Quantity', 'Date & Time Added']);
    }

    data.forEach(function(item) {
      sheet.appendRow([item.name, item.quantity, item.date]);
    });

    return ContentService.createTextOutput('Success').setMimeType(ContentService.MimeType.TEXT);
  } catch (error) {
    return ContentService.createTextOutput('Error: ' + error.message).setMimeType(ContentService.MimeType.TEXT);
  }
}
